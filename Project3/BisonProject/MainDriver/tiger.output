Terminals unused in grammar

   LBRACE
   RBRACE
   DOT
   FUNCTION


State 2 conflicts: 1 shift/reduce
State 15 conflicts: 1 shift/reduce
State 77 conflicts: 14 shift/reduce
State 78 conflicts: 13 shift/reduce
State 95 conflicts: 13 shift/reduce
State 96 conflicts: 13 shift/reduce
State 103 conflicts: 13 shift/reduce


Grammar

    0 $accept: program $end

    1 program: exp

    2 exp: STRING
    3    | INT
    4    | NIL
    5    | lval
    6    | MINUS exp
    7    | exp PLUS exp
    8    | exp MINUS exp
    9    | exp DIVIDE exp
   10    | exp TIMES exp
   11    | exp EQ exp
   12    | exp NEQ exp
   13    | exp GT exp
   14    | exp LT exp
   15    | exp GE exp
   16    | exp LE exp
   17    | exp AND exp
   18    | exp OR exp
   19    | exp ASSIGN exp
   20    | lval ASSIGN exp
   21    | ID LPAREN exp-list RPAREN
   22    | LPAREN exp-seq RPAREN
   23    | ID LBRACK exp RBRACK OF exp
   24    | IF exp THEN exp
   25    | IF exp THEN exp ELSE exp
   26    | WHILE exp DO exp
   27    | FOR ID ASSIGN exp TO exp DO exp
   28    | BREAK
   29    | LET declaration-list IN exp-seq END
   30    | error

   31 exp-seq: exp
   32        | exp-seq SEMICOLON exp

   33 exp-list: exp
   34         | exp-list COMMA exp

   35 lval: ID
   36     | lval LBRACK exp RBRACK
   37     | ID LBRACK exp RBRACK

   38 declaration-list: declaration
   39                 | declaration-list declaration

   40 declaration: type-declaration
   41            | variable-declaration

   42 type-declaration: TYPE ID EQ type

   43 type: ID
   44     | ARRAY OF ID

   45 variable-declaration: VAR ID ASSIGN exp
   46                     | VAR ID COLON ID ASSIGN exp


Terminals, with rules where they appear

$end (0) 0
error (256) 30
ID (258) 21 23 27 35 37 42 43 44 45 46
STRING (259) 2
INT (260) 3
COMMA (261) 34
COLON (262) 46
SEMICOLON (263) 32
LPAREN (264) 21 22
RPAREN (265) 21 22
LBRACK (266) 23 36 37
RBRACK (267) 23 36 37
LBRACE (268)
RBRACE (269)
DOT (270)
ARRAY (271) 44
IF (272) 24 25
THEN (273) 24 25
ELSE (274) 25
WHILE (275) 26
FOR (276) 27
TO (277) 27
DO (278) 26 27
LET (279) 29
IN (280) 29
END (281) 29
OF (282) 23 44
BREAK (283) 28
NIL (284) 4
FUNCTION (285)
VAR (286) 45 46
TYPE (287) 42
ASSIGN (288) 19 20 27 45 46
OR (289) 18
AND (290) 17
LE (291) 16
GE (292) 15
LT (293) 14
GT (294) 13
NEQ (295) 12
EQ (296) 11 42
MINUS (297) 6 8
PLUS (298) 7
DIVIDE (299) 9
TIMES (300) 10
UMINUS (301)


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
program (48)
    on left: 1, on right: 0
exp (49)
    on left: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22
    23 24 25 26 27 28 29 30, on right: 1 6 7 8 9 10 11 12 13 14 15
    16 17 18 19 20 23 24 25 26 27 31 32 33 34 36 37 45 46
exp-seq (50)
    on left: 31 32, on right: 22 29 32
exp-list (51)
    on left: 33 34, on right: 21 34
lval (52)
    on left: 35 36 37, on right: 5 20 36
declaration-list (53)
    on left: 38 39, on right: 29 39
declaration (54)
    on left: 40 41, on right: 38 39
type-declaration (55)
    on left: 42, on right: 40
type (56)
    on left: 43 44, on right: 42
variable-declaration (57)
    on left: 45 46, on right: 41


State 0

    0 $accept: . program $end

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    program  go to state 13
    exp      go to state 14
    lval     go to state 15


State 1

   30 exp: error .

    $default  reduce using rule 30 (exp)


State 2

   21 exp: ID . LPAREN exp-list RPAREN
   23    | ID . LBRACK exp RBRACK OF exp
   35 lval: ID .
   37     | ID . LBRACK exp RBRACK

    LPAREN  shift, and go to state 16
    LBRACK  shift, and go to state 17

    LBRACK    [reduce using rule 35 (lval)]
    $default  reduce using rule 35 (lval)


State 3

    2 exp: STRING .

    $default  reduce using rule 2 (exp)


State 4

    3 exp: INT .

    $default  reduce using rule 3 (exp)


State 5

   22 exp: LPAREN . exp-seq RPAREN

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    exp      go to state 18
    exp-seq  go to state 19
    lval     go to state 15


State 6

   24 exp: IF . exp THEN exp
   25    | IF . exp THEN exp ELSE exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    exp   go to state 20
    lval  go to state 15


State 7

   26 exp: WHILE . exp DO exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    exp   go to state 21
    lval  go to state 15


State 8

   27 exp: FOR . ID ASSIGN exp TO exp DO exp

    ID  shift, and go to state 22


State 9

   29 exp: LET . declaration-list IN exp-seq END

    VAR   shift, and go to state 23
    TYPE  shift, and go to state 24

    declaration-list      go to state 25
    declaration           go to state 26
    type-declaration      go to state 27
    variable-declaration  go to state 28


State 10

   28 exp: BREAK .

    $default  reduce using rule 28 (exp)


State 11

    4 exp: NIL .

    $default  reduce using rule 4 (exp)


State 12

    6 exp: MINUS . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    exp   go to state 29
    lval  go to state 15


State 13

    0 $accept: program . $end

    $end  shift, and go to state 30


State 14

    1 program: exp .
    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . DIVIDE exp
   10    | exp . TIMES exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . GT exp
   14    | exp . LT exp
   15    | exp . GE exp
   16    | exp . LE exp
   17    | exp . AND exp
   18    | exp . OR exp
   19    | exp . ASSIGN exp

    ASSIGN  shift, and go to state 31
    OR      shift, and go to state 32
    AND     shift, and go to state 33
    LE      shift, and go to state 34
    GE      shift, and go to state 35
    LT      shift, and go to state 36
    GT      shift, and go to state 37
    NEQ     shift, and go to state 38
    EQ      shift, and go to state 39
    MINUS   shift, and go to state 40
    PLUS    shift, and go to state 41
    DIVIDE  shift, and go to state 42
    TIMES   shift, and go to state 43

    $default  reduce using rule 1 (program)


State 15

    5 exp: lval .
   20    | lval . ASSIGN exp
   36 lval: lval . LBRACK exp RBRACK

    LBRACK  shift, and go to state 44
    ASSIGN  shift, and go to state 45

    ASSIGN    [reduce using rule 5 (exp)]
    $default  reduce using rule 5 (exp)


State 16

   21 exp: ID LPAREN . exp-list RPAREN

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    exp       go to state 46
    exp-list  go to state 47
    lval      go to state 15


State 17

   23 exp: ID LBRACK . exp RBRACK OF exp
   37 lval: ID LBRACK . exp RBRACK

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    exp   go to state 48
    lval  go to state 15


State 18

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . DIVIDE exp
   10    | exp . TIMES exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . GT exp
   14    | exp . LT exp
   15    | exp . GE exp
   16    | exp . LE exp
   17    | exp . AND exp
   18    | exp . OR exp
   19    | exp . ASSIGN exp
   31 exp-seq: exp .

    ASSIGN  shift, and go to state 31
    OR      shift, and go to state 32
    AND     shift, and go to state 33
    LE      shift, and go to state 34
    GE      shift, and go to state 35
    LT      shift, and go to state 36
    GT      shift, and go to state 37
    NEQ     shift, and go to state 38
    EQ      shift, and go to state 39
    MINUS   shift, and go to state 40
    PLUS    shift, and go to state 41
    DIVIDE  shift, and go to state 42
    TIMES   shift, and go to state 43

    $default  reduce using rule 31 (exp-seq)


State 19

   22 exp: LPAREN exp-seq . RPAREN
   32 exp-seq: exp-seq . SEMICOLON exp

    SEMICOLON  shift, and go to state 49
    RPAREN     shift, and go to state 50


State 20

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . DIVIDE exp
   10    | exp . TIMES exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . GT exp
   14    | exp . LT exp
   15    | exp . GE exp
   16    | exp . LE exp
   17    | exp . AND exp
   18    | exp . OR exp
   19    | exp . ASSIGN exp
   24    | IF exp . THEN exp
   25    | IF exp . THEN exp ELSE exp

    THEN    shift, and go to state 51
    ASSIGN  shift, and go to state 31
    OR      shift, and go to state 32
    AND     shift, and go to state 33
    LE      shift, and go to state 34
    GE      shift, and go to state 35
    LT      shift, and go to state 36
    GT      shift, and go to state 37
    NEQ     shift, and go to state 38
    EQ      shift, and go to state 39
    MINUS   shift, and go to state 40
    PLUS    shift, and go to state 41
    DIVIDE  shift, and go to state 42
    TIMES   shift, and go to state 43


State 21

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . DIVIDE exp
   10    | exp . TIMES exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . GT exp
   14    | exp . LT exp
   15    | exp . GE exp
   16    | exp . LE exp
   17    | exp . AND exp
   18    | exp . OR exp
   19    | exp . ASSIGN exp
   26    | WHILE exp . DO exp

    DO      shift, and go to state 52
    ASSIGN  shift, and go to state 31
    OR      shift, and go to state 32
    AND     shift, and go to state 33
    LE      shift, and go to state 34
    GE      shift, and go to state 35
    LT      shift, and go to state 36
    GT      shift, and go to state 37
    NEQ     shift, and go to state 38
    EQ      shift, and go to state 39
    MINUS   shift, and go to state 40
    PLUS    shift, and go to state 41
    DIVIDE  shift, and go to state 42
    TIMES   shift, and go to state 43


State 22

   27 exp: FOR ID . ASSIGN exp TO exp DO exp

    ASSIGN  shift, and go to state 53


State 23

   45 variable-declaration: VAR . ID ASSIGN exp
   46                     | VAR . ID COLON ID ASSIGN exp

    ID  shift, and go to state 54


State 24

   42 type-declaration: TYPE . ID EQ type

    ID  shift, and go to state 55


State 25

   29 exp: LET declaration-list . IN exp-seq END
   39 declaration-list: declaration-list . declaration

    IN    shift, and go to state 56
    VAR   shift, and go to state 23
    TYPE  shift, and go to state 24

    declaration           go to state 57
    type-declaration      go to state 27
    variable-declaration  go to state 28


State 26

   38 declaration-list: declaration .

    $default  reduce using rule 38 (declaration-list)


State 27

   40 declaration: type-declaration .

    $default  reduce using rule 40 (declaration)


State 28

   41 declaration: variable-declaration .

    $default  reduce using rule 41 (declaration)


State 29

    6 exp: MINUS exp .
    7    | exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . DIVIDE exp
   10    | exp . TIMES exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . GT exp
   14    | exp . LT exp
   15    | exp . GE exp
   16    | exp . LE exp
   17    | exp . AND exp
   18    | exp . OR exp
   19    | exp . ASSIGN exp

    $default  reduce using rule 6 (exp)


State 30

    0 $accept: program $end .

    $default  accept


State 31

   19 exp: exp ASSIGN . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    exp   go to state 58
    lval  go to state 15


State 32

   18 exp: exp OR . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    exp   go to state 59
    lval  go to state 15


State 33

   17 exp: exp AND . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    exp   go to state 60
    lval  go to state 15


State 34

   16 exp: exp LE . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    exp   go to state 61
    lval  go to state 15


State 35

   15 exp: exp GE . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    exp   go to state 62
    lval  go to state 15


State 36

   14 exp: exp LT . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    exp   go to state 63
    lval  go to state 15


State 37

   13 exp: exp GT . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    exp   go to state 64
    lval  go to state 15


State 38

   12 exp: exp NEQ . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    exp   go to state 65
    lval  go to state 15


State 39

   11 exp: exp EQ . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    exp   go to state 66
    lval  go to state 15


State 40

    8 exp: exp MINUS . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    exp   go to state 67
    lval  go to state 15


State 41

    7 exp: exp PLUS . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    exp   go to state 68
    lval  go to state 15


State 42

    9 exp: exp DIVIDE . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    exp   go to state 69
    lval  go to state 15


State 43

   10 exp: exp TIMES . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    exp   go to state 70
    lval  go to state 15


State 44

   36 lval: lval LBRACK . exp RBRACK

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    exp   go to state 71
    lval  go to state 15


State 45

   20 exp: lval ASSIGN . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    exp   go to state 72
    lval  go to state 15


State 46

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . DIVIDE exp
   10    | exp . TIMES exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . GT exp
   14    | exp . LT exp
   15    | exp . GE exp
   16    | exp . LE exp
   17    | exp . AND exp
   18    | exp . OR exp
   19    | exp . ASSIGN exp
   33 exp-list: exp .

    ASSIGN  shift, and go to state 31
    OR      shift, and go to state 32
    AND     shift, and go to state 33
    LE      shift, and go to state 34
    GE      shift, and go to state 35
    LT      shift, and go to state 36
    GT      shift, and go to state 37
    NEQ     shift, and go to state 38
    EQ      shift, and go to state 39
    MINUS   shift, and go to state 40
    PLUS    shift, and go to state 41
    DIVIDE  shift, and go to state 42
    TIMES   shift, and go to state 43

    $default  reduce using rule 33 (exp-list)


State 47

   21 exp: ID LPAREN exp-list . RPAREN
   34 exp-list: exp-list . COMMA exp

    COMMA   shift, and go to state 73
    RPAREN  shift, and go to state 74


State 48

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . DIVIDE exp
   10    | exp . TIMES exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . GT exp
   14    | exp . LT exp
   15    | exp . GE exp
   16    | exp . LE exp
   17    | exp . AND exp
   18    | exp . OR exp
   19    | exp . ASSIGN exp
   23    | ID LBRACK exp . RBRACK OF exp
   37 lval: ID LBRACK exp . RBRACK

    RBRACK  shift, and go to state 75
    ASSIGN  shift, and go to state 31
    OR      shift, and go to state 32
    AND     shift, and go to state 33
    LE      shift, and go to state 34
    GE      shift, and go to state 35
    LT      shift, and go to state 36
    GT      shift, and go to state 37
    NEQ     shift, and go to state 38
    EQ      shift, and go to state 39
    MINUS   shift, and go to state 40
    PLUS    shift, and go to state 41
    DIVIDE  shift, and go to state 42
    TIMES   shift, and go to state 43


State 49

   32 exp-seq: exp-seq SEMICOLON . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    exp   go to state 76
    lval  go to state 15


State 50

   22 exp: LPAREN exp-seq RPAREN .

    $default  reduce using rule 22 (exp)


State 51

   24 exp: IF exp THEN . exp
   25    | IF exp THEN . exp ELSE exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    exp   go to state 77
    lval  go to state 15


State 52

   26 exp: WHILE exp DO . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    exp   go to state 78
    lval  go to state 15


State 53

   27 exp: FOR ID ASSIGN . exp TO exp DO exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    exp   go to state 79
    lval  go to state 15


State 54

   45 variable-declaration: VAR ID . ASSIGN exp
   46                     | VAR ID . COLON ID ASSIGN exp

    COLON   shift, and go to state 80
    ASSIGN  shift, and go to state 81


State 55

   42 type-declaration: TYPE ID . EQ type

    EQ  shift, and go to state 82


State 56

   29 exp: LET declaration-list IN . exp-seq END

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    exp      go to state 18
    exp-seq  go to state 83
    lval     go to state 15


State 57

   39 declaration-list: declaration-list declaration .

    $default  reduce using rule 39 (declaration-list)


State 58

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . DIVIDE exp
   10    | exp . TIMES exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . GT exp
   14    | exp . LT exp
   15    | exp . GE exp
   16    | exp . LE exp
   17    | exp . AND exp
   18    | exp . OR exp
   19    | exp . ASSIGN exp
   19    | exp ASSIGN exp .

    OR      shift, and go to state 32
    AND     shift, and go to state 33
    LE      shift, and go to state 34
    GE      shift, and go to state 35
    LT      shift, and go to state 36
    GT      shift, and go to state 37
    NEQ     shift, and go to state 38
    EQ      shift, and go to state 39
    MINUS   shift, and go to state 40
    PLUS    shift, and go to state 41
    DIVIDE  shift, and go to state 42
    TIMES   shift, and go to state 43

    ASSIGN  error (nonassociative)

    $default  reduce using rule 19 (exp)


State 59

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . DIVIDE exp
   10    | exp . TIMES exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . GT exp
   14    | exp . LT exp
   15    | exp . GE exp
   16    | exp . LE exp
   17    | exp . AND exp
   18    | exp . OR exp
   18    | exp OR exp .
   19    | exp . ASSIGN exp

    LE      shift, and go to state 34
    GE      shift, and go to state 35
    LT      shift, and go to state 36
    GT      shift, and go to state 37
    NEQ     shift, and go to state 38
    EQ      shift, and go to state 39
    MINUS   shift, and go to state 40
    PLUS    shift, and go to state 41
    DIVIDE  shift, and go to state 42
    TIMES   shift, and go to state 43

    OR   error (nonassociative)
    AND  error (nonassociative)

    $default  reduce using rule 18 (exp)


State 60

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . DIVIDE exp
   10    | exp . TIMES exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . GT exp
   14    | exp . LT exp
   15    | exp . GE exp
   16    | exp . LE exp
   17    | exp . AND exp
   17    | exp AND exp .
   18    | exp . OR exp
   19    | exp . ASSIGN exp

    LE      shift, and go to state 34
    GE      shift, and go to state 35
    LT      shift, and go to state 36
    GT      shift, and go to state 37
    NEQ     shift, and go to state 38
    EQ      shift, and go to state 39
    MINUS   shift, and go to state 40
    PLUS    shift, and go to state 41
    DIVIDE  shift, and go to state 42
    TIMES   shift, and go to state 43

    OR   error (nonassociative)
    AND  error (nonassociative)

    $default  reduce using rule 17 (exp)


State 61

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . DIVIDE exp
   10    | exp . TIMES exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . GT exp
   14    | exp . LT exp
   15    | exp . GE exp
   16    | exp . LE exp
   16    | exp LE exp .
   17    | exp . AND exp
   18    | exp . OR exp
   19    | exp . ASSIGN exp

    MINUS   shift, and go to state 40
    PLUS    shift, and go to state 41
    DIVIDE  shift, and go to state 42
    TIMES   shift, and go to state 43

    LE   error (nonassociative)
    GE   error (nonassociative)
    LT   error (nonassociative)
    GT   error (nonassociative)
    NEQ  error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 16 (exp)


State 62

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . DIVIDE exp
   10    | exp . TIMES exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . GT exp
   14    | exp . LT exp
   15    | exp . GE exp
   15    | exp GE exp .
   16    | exp . LE exp
   17    | exp . AND exp
   18    | exp . OR exp
   19    | exp . ASSIGN exp

    MINUS   shift, and go to state 40
    PLUS    shift, and go to state 41
    DIVIDE  shift, and go to state 42
    TIMES   shift, and go to state 43

    LE   error (nonassociative)
    GE   error (nonassociative)
    LT   error (nonassociative)
    GT   error (nonassociative)
    NEQ  error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 15 (exp)


State 63

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . DIVIDE exp
   10    | exp . TIMES exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . GT exp
   14    | exp . LT exp
   14    | exp LT exp .
   15    | exp . GE exp
   16    | exp . LE exp
   17    | exp . AND exp
   18    | exp . OR exp
   19    | exp . ASSIGN exp

    MINUS   shift, and go to state 40
    PLUS    shift, and go to state 41
    DIVIDE  shift, and go to state 42
    TIMES   shift, and go to state 43

    LE   error (nonassociative)
    GE   error (nonassociative)
    LT   error (nonassociative)
    GT   error (nonassociative)
    NEQ  error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 14 (exp)


State 64

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . DIVIDE exp
   10    | exp . TIMES exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . GT exp
   13    | exp GT exp .
   14    | exp . LT exp
   15    | exp . GE exp
   16    | exp . LE exp
   17    | exp . AND exp
   18    | exp . OR exp
   19    | exp . ASSIGN exp

    MINUS   shift, and go to state 40
    PLUS    shift, and go to state 41
    DIVIDE  shift, and go to state 42
    TIMES   shift, and go to state 43

    LE   error (nonassociative)
    GE   error (nonassociative)
    LT   error (nonassociative)
    GT   error (nonassociative)
    NEQ  error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 13 (exp)


State 65

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . DIVIDE exp
   10    | exp . TIMES exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   12    | exp NEQ exp .
   13    | exp . GT exp
   14    | exp . LT exp
   15    | exp . GE exp
   16    | exp . LE exp
   17    | exp . AND exp
   18    | exp . OR exp
   19    | exp . ASSIGN exp

    MINUS   shift, and go to state 40
    PLUS    shift, and go to state 41
    DIVIDE  shift, and go to state 42
    TIMES   shift, and go to state 43

    LE   error (nonassociative)
    GE   error (nonassociative)
    LT   error (nonassociative)
    GT   error (nonassociative)
    NEQ  error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 12 (exp)


State 66

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . DIVIDE exp
   10    | exp . TIMES exp
   11    | exp . EQ exp
   11    | exp EQ exp .
   12    | exp . NEQ exp
   13    | exp . GT exp
   14    | exp . LT exp
   15    | exp . GE exp
   16    | exp . LE exp
   17    | exp . AND exp
   18    | exp . OR exp
   19    | exp . ASSIGN exp

    MINUS   shift, and go to state 40
    PLUS    shift, and go to state 41
    DIVIDE  shift, and go to state 42
    TIMES   shift, and go to state 43

    LE   error (nonassociative)
    GE   error (nonassociative)
    LT   error (nonassociative)
    GT   error (nonassociative)
    NEQ  error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 11 (exp)


State 67

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    8    | exp MINUS exp .
    9    | exp . DIVIDE exp
   10    | exp . TIMES exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . GT exp
   14    | exp . LT exp
   15    | exp . GE exp
   16    | exp . LE exp
   17    | exp . AND exp
   18    | exp . OR exp
   19    | exp . ASSIGN exp

    DIVIDE  shift, and go to state 42
    TIMES   shift, and go to state 43

    $default  reduce using rule 8 (exp)


State 68

    7 exp: exp . PLUS exp
    7    | exp PLUS exp .
    8    | exp . MINUS exp
    9    | exp . DIVIDE exp
   10    | exp . TIMES exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . GT exp
   14    | exp . LT exp
   15    | exp . GE exp
   16    | exp . LE exp
   17    | exp . AND exp
   18    | exp . OR exp
   19    | exp . ASSIGN exp

    DIVIDE  shift, and go to state 42
    TIMES   shift, and go to state 43

    $default  reduce using rule 7 (exp)


State 69

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . DIVIDE exp
    9    | exp DIVIDE exp .
   10    | exp . TIMES exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . GT exp
   14    | exp . LT exp
   15    | exp . GE exp
   16    | exp . LE exp
   17    | exp . AND exp
   18    | exp . OR exp
   19    | exp . ASSIGN exp

    $default  reduce using rule 9 (exp)


State 70

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . DIVIDE exp
   10    | exp . TIMES exp
   10    | exp TIMES exp .
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . GT exp
   14    | exp . LT exp
   15    | exp . GE exp
   16    | exp . LE exp
   17    | exp . AND exp
   18    | exp . OR exp
   19    | exp . ASSIGN exp

    $default  reduce using rule 10 (exp)


State 71

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . DIVIDE exp
   10    | exp . TIMES exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . GT exp
   14    | exp . LT exp
   15    | exp . GE exp
   16    | exp . LE exp
   17    | exp . AND exp
   18    | exp . OR exp
   19    | exp . ASSIGN exp
   36 lval: lval LBRACK exp . RBRACK

    RBRACK  shift, and go to state 84
    ASSIGN  shift, and go to state 31
    OR      shift, and go to state 32
    AND     shift, and go to state 33
    LE      shift, and go to state 34
    GE      shift, and go to state 35
    LT      shift, and go to state 36
    GT      shift, and go to state 37
    NEQ     shift, and go to state 38
    EQ      shift, and go to state 39
    MINUS   shift, and go to state 40
    PLUS    shift, and go to state 41
    DIVIDE  shift, and go to state 42
    TIMES   shift, and go to state 43


State 72

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . DIVIDE exp
   10    | exp . TIMES exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . GT exp
   14    | exp . LT exp
   15    | exp . GE exp
   16    | exp . LE exp
   17    | exp . AND exp
   18    | exp . OR exp
   19    | exp . ASSIGN exp
   20    | lval ASSIGN exp .

    OR      shift, and go to state 32
    AND     shift, and go to state 33
    LE      shift, and go to state 34
    GE      shift, and go to state 35
    LT      shift, and go to state 36
    GT      shift, and go to state 37
    NEQ     shift, and go to state 38
    EQ      shift, and go to state 39
    MINUS   shift, and go to state 40
    PLUS    shift, and go to state 41
    DIVIDE  shift, and go to state 42
    TIMES   shift, and go to state 43

    ASSIGN  error (nonassociative)

    $default  reduce using rule 20 (exp)


State 73

   34 exp-list: exp-list COMMA . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    exp   go to state 85
    lval  go to state 15


State 74

   21 exp: ID LPAREN exp-list RPAREN .

    $default  reduce using rule 21 (exp)


State 75

   23 exp: ID LBRACK exp RBRACK . OF exp
   37 lval: ID LBRACK exp RBRACK .

    OF  shift, and go to state 86

    $default  reduce using rule 37 (lval)


State 76

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . DIVIDE exp
   10    | exp . TIMES exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . GT exp
   14    | exp . LT exp
   15    | exp . GE exp
   16    | exp . LE exp
   17    | exp . AND exp
   18    | exp . OR exp
   19    | exp . ASSIGN exp
   32 exp-seq: exp-seq SEMICOLON exp .

    ASSIGN  shift, and go to state 31
    OR      shift, and go to state 32
    AND     shift, and go to state 33
    LE      shift, and go to state 34
    GE      shift, and go to state 35
    LT      shift, and go to state 36
    GT      shift, and go to state 37
    NEQ     shift, and go to state 38
    EQ      shift, and go to state 39
    MINUS   shift, and go to state 40
    PLUS    shift, and go to state 41
    DIVIDE  shift, and go to state 42
    TIMES   shift, and go to state 43

    $default  reduce using rule 32 (exp-seq)


State 77

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . DIVIDE exp
   10    | exp . TIMES exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . GT exp
   14    | exp . LT exp
   15    | exp . GE exp
   16    | exp . LE exp
   17    | exp . AND exp
   18    | exp . OR exp
   19    | exp . ASSIGN exp
   24    | IF exp THEN exp .
   25    | IF exp THEN exp . ELSE exp

    ELSE    shift, and go to state 87
    ASSIGN  shift, and go to state 31
    OR      shift, and go to state 32
    AND     shift, and go to state 33
    LE      shift, and go to state 34
    GE      shift, and go to state 35
    LT      shift, and go to state 36
    GT      shift, and go to state 37
    NEQ     shift, and go to state 38
    EQ      shift, and go to state 39
    MINUS   shift, and go to state 40
    PLUS    shift, and go to state 41
    DIVIDE  shift, and go to state 42
    TIMES   shift, and go to state 43

    ELSE      [reduce using rule 24 (exp)]
    ASSIGN    [reduce using rule 24 (exp)]
    OR        [reduce using rule 24 (exp)]
    AND       [reduce using rule 24 (exp)]
    LE        [reduce using rule 24 (exp)]
    GE        [reduce using rule 24 (exp)]
    LT        [reduce using rule 24 (exp)]
    GT        [reduce using rule 24 (exp)]
    NEQ       [reduce using rule 24 (exp)]
    EQ        [reduce using rule 24 (exp)]
    MINUS     [reduce using rule 24 (exp)]
    PLUS      [reduce using rule 24 (exp)]
    DIVIDE    [reduce using rule 24 (exp)]
    TIMES     [reduce using rule 24 (exp)]
    $default  reduce using rule 24 (exp)


State 78

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . DIVIDE exp
   10    | exp . TIMES exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . GT exp
   14    | exp . LT exp
   15    | exp . GE exp
   16    | exp . LE exp
   17    | exp . AND exp
   18    | exp . OR exp
   19    | exp . ASSIGN exp
   26    | WHILE exp DO exp .

    ASSIGN  shift, and go to state 31
    OR      shift, and go to state 32
    AND     shift, and go to state 33
    LE      shift, and go to state 34
    GE      shift, and go to state 35
    LT      shift, and go to state 36
    GT      shift, and go to state 37
    NEQ     shift, and go to state 38
    EQ      shift, and go to state 39
    MINUS   shift, and go to state 40
    PLUS    shift, and go to state 41
    DIVIDE  shift, and go to state 42
    TIMES   shift, and go to state 43

    ASSIGN    [reduce using rule 26 (exp)]
    OR        [reduce using rule 26 (exp)]
    AND       [reduce using rule 26 (exp)]
    LE        [reduce using rule 26 (exp)]
    GE        [reduce using rule 26 (exp)]
    LT        [reduce using rule 26 (exp)]
    GT        [reduce using rule 26 (exp)]
    NEQ       [reduce using rule 26 (exp)]
    EQ        [reduce using rule 26 (exp)]
    MINUS     [reduce using rule 26 (exp)]
    PLUS      [reduce using rule 26 (exp)]
    DIVIDE    [reduce using rule 26 (exp)]
    TIMES     [reduce using rule 26 (exp)]
    $default  reduce using rule 26 (exp)


State 79

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . DIVIDE exp
   10    | exp . TIMES exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . GT exp
   14    | exp . LT exp
   15    | exp . GE exp
   16    | exp . LE exp
   17    | exp . AND exp
   18    | exp . OR exp
   19    | exp . ASSIGN exp
   27    | FOR ID ASSIGN exp . TO exp DO exp

    TO      shift, and go to state 88
    ASSIGN  shift, and go to state 31
    OR      shift, and go to state 32
    AND     shift, and go to state 33
    LE      shift, and go to state 34
    GE      shift, and go to state 35
    LT      shift, and go to state 36
    GT      shift, and go to state 37
    NEQ     shift, and go to state 38
    EQ      shift, and go to state 39
    MINUS   shift, and go to state 40
    PLUS    shift, and go to state 41
    DIVIDE  shift, and go to state 42
    TIMES   shift, and go to state 43


State 80

   46 variable-declaration: VAR ID COLON . ID ASSIGN exp

    ID  shift, and go to state 89


State 81

   45 variable-declaration: VAR ID ASSIGN . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    exp   go to state 90
    lval  go to state 15


State 82

   42 type-declaration: TYPE ID EQ . type

    ID     shift, and go to state 91
    ARRAY  shift, and go to state 92

    type  go to state 93


State 83

   29 exp: LET declaration-list IN exp-seq . END
   32 exp-seq: exp-seq . SEMICOLON exp

    SEMICOLON  shift, and go to state 49
    END        shift, and go to state 94


State 84

   36 lval: lval LBRACK exp RBRACK .

    $default  reduce using rule 36 (lval)


State 85

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . DIVIDE exp
   10    | exp . TIMES exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . GT exp
   14    | exp . LT exp
   15    | exp . GE exp
   16    | exp . LE exp
   17    | exp . AND exp
   18    | exp . OR exp
   19    | exp . ASSIGN exp
   34 exp-list: exp-list COMMA exp .

    ASSIGN  shift, and go to state 31
    OR      shift, and go to state 32
    AND     shift, and go to state 33
    LE      shift, and go to state 34
    GE      shift, and go to state 35
    LT      shift, and go to state 36
    GT      shift, and go to state 37
    NEQ     shift, and go to state 38
    EQ      shift, and go to state 39
    MINUS   shift, and go to state 40
    PLUS    shift, and go to state 41
    DIVIDE  shift, and go to state 42
    TIMES   shift, and go to state 43

    $default  reduce using rule 34 (exp-list)


State 86

   23 exp: ID LBRACK exp RBRACK OF . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    exp   go to state 95
    lval  go to state 15


State 87

   25 exp: IF exp THEN exp ELSE . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    exp   go to state 96
    lval  go to state 15


State 88

   27 exp: FOR ID ASSIGN exp TO . exp DO exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    exp   go to state 97
    lval  go to state 15


State 89

   46 variable-declaration: VAR ID COLON ID . ASSIGN exp

    ASSIGN  shift, and go to state 98


State 90

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . DIVIDE exp
   10    | exp . TIMES exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . GT exp
   14    | exp . LT exp
   15    | exp . GE exp
   16    | exp . LE exp
   17    | exp . AND exp
   18    | exp . OR exp
   19    | exp . ASSIGN exp
   45 variable-declaration: VAR ID ASSIGN exp .

    ASSIGN  shift, and go to state 31
    OR      shift, and go to state 32
    AND     shift, and go to state 33
    LE      shift, and go to state 34
    GE      shift, and go to state 35
    LT      shift, and go to state 36
    GT      shift, and go to state 37
    NEQ     shift, and go to state 38
    EQ      shift, and go to state 39
    MINUS   shift, and go to state 40
    PLUS    shift, and go to state 41
    DIVIDE  shift, and go to state 42
    TIMES   shift, and go to state 43

    $default  reduce using rule 45 (variable-declaration)


State 91

   43 type: ID .

    $default  reduce using rule 43 (type)


State 92

   44 type: ARRAY . OF ID

    OF  shift, and go to state 99


State 93

   42 type-declaration: TYPE ID EQ type .

    $default  reduce using rule 42 (type-declaration)


State 94

   29 exp: LET declaration-list IN exp-seq END .

    $default  reduce using rule 29 (exp)


State 95

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . DIVIDE exp
   10    | exp . TIMES exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . GT exp
   14    | exp . LT exp
   15    | exp . GE exp
   16    | exp . LE exp
   17    | exp . AND exp
   18    | exp . OR exp
   19    | exp . ASSIGN exp
   23    | ID LBRACK exp RBRACK OF exp .

    ASSIGN  shift, and go to state 31
    OR      shift, and go to state 32
    AND     shift, and go to state 33
    LE      shift, and go to state 34
    GE      shift, and go to state 35
    LT      shift, and go to state 36
    GT      shift, and go to state 37
    NEQ     shift, and go to state 38
    EQ      shift, and go to state 39
    MINUS   shift, and go to state 40
    PLUS    shift, and go to state 41
    DIVIDE  shift, and go to state 42
    TIMES   shift, and go to state 43

    ASSIGN    [reduce using rule 23 (exp)]
    OR        [reduce using rule 23 (exp)]
    AND       [reduce using rule 23 (exp)]
    LE        [reduce using rule 23 (exp)]
    GE        [reduce using rule 23 (exp)]
    LT        [reduce using rule 23 (exp)]
    GT        [reduce using rule 23 (exp)]
    NEQ       [reduce using rule 23 (exp)]
    EQ        [reduce using rule 23 (exp)]
    MINUS     [reduce using rule 23 (exp)]
    PLUS      [reduce using rule 23 (exp)]
    DIVIDE    [reduce using rule 23 (exp)]
    TIMES     [reduce using rule 23 (exp)]
    $default  reduce using rule 23 (exp)


State 96

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . DIVIDE exp
   10    | exp . TIMES exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . GT exp
   14    | exp . LT exp
   15    | exp . GE exp
   16    | exp . LE exp
   17    | exp . AND exp
   18    | exp . OR exp
   19    | exp . ASSIGN exp
   25    | IF exp THEN exp ELSE exp .

    ASSIGN  shift, and go to state 31
    OR      shift, and go to state 32
    AND     shift, and go to state 33
    LE      shift, and go to state 34
    GE      shift, and go to state 35
    LT      shift, and go to state 36
    GT      shift, and go to state 37
    NEQ     shift, and go to state 38
    EQ      shift, and go to state 39
    MINUS   shift, and go to state 40
    PLUS    shift, and go to state 41
    DIVIDE  shift, and go to state 42
    TIMES   shift, and go to state 43

    ASSIGN    [reduce using rule 25 (exp)]
    OR        [reduce using rule 25 (exp)]
    AND       [reduce using rule 25 (exp)]
    LE        [reduce using rule 25 (exp)]
    GE        [reduce using rule 25 (exp)]
    LT        [reduce using rule 25 (exp)]
    GT        [reduce using rule 25 (exp)]
    NEQ       [reduce using rule 25 (exp)]
    EQ        [reduce using rule 25 (exp)]
    MINUS     [reduce using rule 25 (exp)]
    PLUS      [reduce using rule 25 (exp)]
    DIVIDE    [reduce using rule 25 (exp)]
    TIMES     [reduce using rule 25 (exp)]
    $default  reduce using rule 25 (exp)


State 97

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . DIVIDE exp
   10    | exp . TIMES exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . GT exp
   14    | exp . LT exp
   15    | exp . GE exp
   16    | exp . LE exp
   17    | exp . AND exp
   18    | exp . OR exp
   19    | exp . ASSIGN exp
   27    | FOR ID ASSIGN exp TO exp . DO exp

    DO      shift, and go to state 100
    ASSIGN  shift, and go to state 31
    OR      shift, and go to state 32
    AND     shift, and go to state 33
    LE      shift, and go to state 34
    GE      shift, and go to state 35
    LT      shift, and go to state 36
    GT      shift, and go to state 37
    NEQ     shift, and go to state 38
    EQ      shift, and go to state 39
    MINUS   shift, and go to state 40
    PLUS    shift, and go to state 41
    DIVIDE  shift, and go to state 42
    TIMES   shift, and go to state 43


State 98

   46 variable-declaration: VAR ID COLON ID ASSIGN . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    exp   go to state 101
    lval  go to state 15


State 99

   44 type: ARRAY OF . ID

    ID  shift, and go to state 102


State 100

   27 exp: FOR ID ASSIGN exp TO exp DO . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    MINUS   shift, and go to state 12

    exp   go to state 103
    lval  go to state 15


State 101

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . DIVIDE exp
   10    | exp . TIMES exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . GT exp
   14    | exp . LT exp
   15    | exp . GE exp
   16    | exp . LE exp
   17    | exp . AND exp
   18    | exp . OR exp
   19    | exp . ASSIGN exp
   46 variable-declaration: VAR ID COLON ID ASSIGN exp .

    ASSIGN  shift, and go to state 31
    OR      shift, and go to state 32
    AND     shift, and go to state 33
    LE      shift, and go to state 34
    GE      shift, and go to state 35
    LT      shift, and go to state 36
    GT      shift, and go to state 37
    NEQ     shift, and go to state 38
    EQ      shift, and go to state 39
    MINUS   shift, and go to state 40
    PLUS    shift, and go to state 41
    DIVIDE  shift, and go to state 42
    TIMES   shift, and go to state 43

    $default  reduce using rule 46 (variable-declaration)


State 102

   44 type: ARRAY OF ID .

    $default  reduce using rule 44 (type)


State 103

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . DIVIDE exp
   10    | exp . TIMES exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . GT exp
   14    | exp . LT exp
   15    | exp . GE exp
   16    | exp . LE exp
   17    | exp . AND exp
   18    | exp . OR exp
   19    | exp . ASSIGN exp
   27    | FOR ID ASSIGN exp TO exp DO exp .

    ASSIGN  shift, and go to state 31
    OR      shift, and go to state 32
    AND     shift, and go to state 33
    LE      shift, and go to state 34
    GE      shift, and go to state 35
    LT      shift, and go to state 36
    GT      shift, and go to state 37
    NEQ     shift, and go to state 38
    EQ      shift, and go to state 39
    MINUS   shift, and go to state 40
    PLUS    shift, and go to state 41
    DIVIDE  shift, and go to state 42
    TIMES   shift, and go to state 43

    ASSIGN    [reduce using rule 27 (exp)]
    OR        [reduce using rule 27 (exp)]
    AND       [reduce using rule 27 (exp)]
    LE        [reduce using rule 27 (exp)]
    GE        [reduce using rule 27 (exp)]
    LT        [reduce using rule 27 (exp)]
    GT        [reduce using rule 27 (exp)]
    NEQ       [reduce using rule 27 (exp)]
    EQ        [reduce using rule 27 (exp)]
    MINUS     [reduce using rule 27 (exp)]
    PLUS      [reduce using rule 27 (exp)]
    DIVIDE    [reduce using rule 27 (exp)]
    TIMES     [reduce using rule 27 (exp)]
    $default  reduce using rule 27 (exp)
