/* This is the test case file. Here is the requirement:
    1. The test case file must be a valid Tiger program. No syntax errors allowed.
    2. The table below has two columns. The first column specifies Tiger construct that must be covered, and
       the second column gives the line # of the statement that is used to test the construct. Please fill the second
       column after you have designed all test cases successfully.
       
        Tiger Construct to be covered                         Line # of the statement
        array type declaration                                           33,34
        variable declaration                                      27, 28, 29, 30, 31
        lvalue                                                             48
        logic comparison expression                                      45,46
        arithmetic expression                                           39 - 43
        assignment expression                                      27, 28, 29, 30, 31
        if-then-else expression                                             52
        while expression                                                     50
        for loop expression                                                 51
        let expression                                                      26
        a sequence of expressions                                       39 - 43
        array creation                                                      36
        Negation                                                            31
        operator precedence levels                                          41
 */

 /* Put your Tiger program here */

 let
    var num1 := 1
    var i := 0
    var str1 := " "
    var str2 := "i"
    var negNum := -1

    type intArr = int
    type arr = array of intArr

    var arr1:arr := arr [5] of 1
 in
    1+1;
    1+1+1;
    1+1-1;
    4/-5+1
    1*1
    1/1

    10 >= 1
    10 <= 1

    arr1[0];

    while i < 100 do (num1:=num1+1;())
    for j:=0 to 100 do (num1=num1+1;());
    if negNum < num1 then num1 := 0 else negNum := 0;
 end

    
 

