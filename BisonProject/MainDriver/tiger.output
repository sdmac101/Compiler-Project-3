Terminals unused in grammar

   LBRACE
   RBRACE
   DOT
   FUNCTION


State 1 conflicts: 1 shift/reduce
State 14 conflicts: 1 shift/reduce
State 76 conflicts: 14 shift/reduce
State 77 conflicts: 13 shift/reduce
State 94 conflicts: 13 shift/reduce
State 95 conflicts: 13 shift/reduce
State 102 conflicts: 13 shift/reduce


Grammar

    0 $accept: program $end

    1 program: exp

    2 exp: STRING
    3    | INT
    4    | NIL
    5    | lval
    6    | MINUS exp
    7    | exp PLUS exp
    8    | exp MINUS exp
    9    | exp DIVIDE exp
   10    | exp TIMES exp
   11    | exp EQ exp
   12    | exp NEQ exp
   13    | exp GT exp
   14    | exp LT exp
   15    | exp GE exp
   16    | exp LE exp
   17    | exp AND exp
   18    | exp OR exp
   19    | exp ASSIGN exp
   20    | lval ASSIGN exp
   21    | ID LPAREN exp-list RPAREN
   22    | LPAREN exp-seq RPAREN
   23    | ID LBRACK exp RBRACK OF exp
   24    | IF exp THEN exp
   25    | IF exp THEN exp ELSE exp
   26    | WHILE exp DO exp
   27    | FOR ID ASSIGN exp TO exp DO exp
   28    | BREAK
   29    | LET declaration-list IN exp-seq END

   30 exp-seq: exp
   31        | exp-seq SEMICOLON exp

   32 exp-list: exp
   33         | exp-list COMMA exp

   34 lval: ID
   35     | lval LBRACK exp RBRACK

   36 declaration-list: declaration
   37                 | declaration-list declaration

   38 declaration: type-declaration
   39            | variable-declaration

   40 type-declaration: TYPE ID EQ type

   41 type: ID
   42     | ARRAY OF ID

   43 variable-declaration: VAR ID ASSIGN exp
   44                     | VAR ID COLON ID ASSIGN exp


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 21 23 27 34 40 41 42 43 44
STRING (259) 2
INT (260) 3
COMMA (261) 33
COLON (262) 44
SEMICOLON (263) 31
LPAREN (264) 21 22
RPAREN (265) 21 22
LBRACK (266) 23 35
RBRACK (267) 23 35
LBRACE (268)
RBRACE (269)
DOT (270)
ARRAY (271) 42
IF (272) 24 25
THEN (273) 24 25
ELSE (274) 25
WHILE (275) 26
FOR (276) 27
TO (277) 27
DO (278) 26 27
LET (279) 29
IN (280) 29
END (281) 29
OF (282) 23 42
BREAK (283) 28
NIL (284) 4
FUNCTION (285)
VAR (286) 43 44
TYPE (287) 40
ASSIGN (288) 19 20 27 43 44
OR (289) 18
AND (290) 17
LE (291) 16
GE (292) 15
LT (293) 14
GT (294) 13
NEQ (295) 12
EQ (296) 11 40
MINUS (297) 6 8
PLUS (298) 7
DIVIDE (299) 9
TIMES (300) 10
UMINUS (301)


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
program (48)
    on left: 1, on right: 0
exp (49)
    on left: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22
    23 24 25 26 27 28 29, on right: 1 6 7 8 9 10 11 12 13 14 15 16
    17 18 19 20 23 24 25 26 27 30 31 32 33 35 43 44
exp-seq (50)
    on left: 30 31, on right: 22 29 31
exp-list (51)
    on left: 32 33, on right: 21 33
lval (52)
    on left: 34 35, on right: 5 20 35
declaration-list (53)
    on left: 36 37, on right: 29 37
declaration (54)
    on left: 38 39, on right: 36 37
type-declaration (55)
    on left: 40, on right: 38
type (56)
    on left: 41 42, on right: 40
variable-declaration (57)
    on left: 43 44, on right: 39


State 0

    0 $accept: . program $end

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    program  go to state 12
    exp      go to state 13
    lval     go to state 14


State 1

   21 exp: ID . LPAREN exp-list RPAREN
   23    | ID . LBRACK exp RBRACK OF exp
   34 lval: ID .

    LPAREN  shift, and go to state 15
    LBRACK  shift, and go to state 16

    LBRACK    [reduce using rule 34 (lval)]
    $default  reduce using rule 34 (lval)


State 2

    2 exp: STRING .

    $default  reduce using rule 2 (exp)


State 3

    3 exp: INT .

    $default  reduce using rule 3 (exp)


State 4

   22 exp: LPAREN . exp-seq RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp      go to state 17
    exp-seq  go to state 18
    lval     go to state 14


State 5

   24 exp: IF . exp THEN exp
   25    | IF . exp THEN exp ELSE exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp   go to state 19
    lval  go to state 14


State 6

   26 exp: WHILE . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp   go to state 20
    lval  go to state 14


State 7

   27 exp: FOR . ID ASSIGN exp TO exp DO exp

    ID  shift, and go to state 21


State 8

   29 exp: LET . declaration-list IN exp-seq END

    VAR   shift, and go to state 22
    TYPE  shift, and go to state 23

    declaration-list      go to state 24
    declaration           go to state 25
    type-declaration      go to state 26
    variable-declaration  go to state 27


State 9

   28 exp: BREAK .

    $default  reduce using rule 28 (exp)


State 10

    4 exp: NIL .

    $default  reduce using rule 4 (exp)


State 11

    6 exp: MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp   go to state 28
    lval  go to state 14


State 12

    0 $accept: program . $end

    $end  shift, and go to state 29


State 13

    1 program: exp .
    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . DIVIDE exp
   10    | exp . TIMES exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . GT exp
   14    | exp . LT exp
   15    | exp . GE exp
   16    | exp . LE exp
   17    | exp . AND exp
   18    | exp . OR exp
   19    | exp . ASSIGN exp

    ASSIGN  shift, and go to state 30
    OR      shift, and go to state 31
    AND     shift, and go to state 32
    LE      shift, and go to state 33
    GE      shift, and go to state 34
    LT      shift, and go to state 35
    GT      shift, and go to state 36
    NEQ     shift, and go to state 37
    EQ      shift, and go to state 38
    MINUS   shift, and go to state 39
    PLUS    shift, and go to state 40
    DIVIDE  shift, and go to state 41
    TIMES   shift, and go to state 42

    $default  reduce using rule 1 (program)


State 14

    5 exp: lval .
   20    | lval . ASSIGN exp
   35 lval: lval . LBRACK exp RBRACK

    LBRACK  shift, and go to state 43
    ASSIGN  shift, and go to state 44

    ASSIGN    [reduce using rule 5 (exp)]
    $default  reduce using rule 5 (exp)


State 15

   21 exp: ID LPAREN . exp-list RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp       go to state 45
    exp-list  go to state 46
    lval      go to state 14


State 16

   23 exp: ID LBRACK . exp RBRACK OF exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp   go to state 47
    lval  go to state 14


State 17

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . DIVIDE exp
   10    | exp . TIMES exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . GT exp
   14    | exp . LT exp
   15    | exp . GE exp
   16    | exp . LE exp
   17    | exp . AND exp
   18    | exp . OR exp
   19    | exp . ASSIGN exp
   30 exp-seq: exp .

    ASSIGN  shift, and go to state 30
    OR      shift, and go to state 31
    AND     shift, and go to state 32
    LE      shift, and go to state 33
    GE      shift, and go to state 34
    LT      shift, and go to state 35
    GT      shift, and go to state 36
    NEQ     shift, and go to state 37
    EQ      shift, and go to state 38
    MINUS   shift, and go to state 39
    PLUS    shift, and go to state 40
    DIVIDE  shift, and go to state 41
    TIMES   shift, and go to state 42

    $default  reduce using rule 30 (exp-seq)


State 18

   22 exp: LPAREN exp-seq . RPAREN
   31 exp-seq: exp-seq . SEMICOLON exp

    SEMICOLON  shift, and go to state 48
    RPAREN     shift, and go to state 49


State 19

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . DIVIDE exp
   10    | exp . TIMES exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . GT exp
   14    | exp . LT exp
   15    | exp . GE exp
   16    | exp . LE exp
   17    | exp . AND exp
   18    | exp . OR exp
   19    | exp . ASSIGN exp
   24    | IF exp . THEN exp
   25    | IF exp . THEN exp ELSE exp

    THEN    shift, and go to state 50
    ASSIGN  shift, and go to state 30
    OR      shift, and go to state 31
    AND     shift, and go to state 32
    LE      shift, and go to state 33
    GE      shift, and go to state 34
    LT      shift, and go to state 35
    GT      shift, and go to state 36
    NEQ     shift, and go to state 37
    EQ      shift, and go to state 38
    MINUS   shift, and go to state 39
    PLUS    shift, and go to state 40
    DIVIDE  shift, and go to state 41
    TIMES   shift, and go to state 42


State 20

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . DIVIDE exp
   10    | exp . TIMES exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . GT exp
   14    | exp . LT exp
   15    | exp . GE exp
   16    | exp . LE exp
   17    | exp . AND exp
   18    | exp . OR exp
   19    | exp . ASSIGN exp
   26    | WHILE exp . DO exp

    DO      shift, and go to state 51
    ASSIGN  shift, and go to state 30
    OR      shift, and go to state 31
    AND     shift, and go to state 32
    LE      shift, and go to state 33
    GE      shift, and go to state 34
    LT      shift, and go to state 35
    GT      shift, and go to state 36
    NEQ     shift, and go to state 37
    EQ      shift, and go to state 38
    MINUS   shift, and go to state 39
    PLUS    shift, and go to state 40
    DIVIDE  shift, and go to state 41
    TIMES   shift, and go to state 42


State 21

   27 exp: FOR ID . ASSIGN exp TO exp DO exp

    ASSIGN  shift, and go to state 52


State 22

   43 variable-declaration: VAR . ID ASSIGN exp
   44                     | VAR . ID COLON ID ASSIGN exp

    ID  shift, and go to state 53


State 23

   40 type-declaration: TYPE . ID EQ type

    ID  shift, and go to state 54


State 24

   29 exp: LET declaration-list . IN exp-seq END
   37 declaration-list: declaration-list . declaration

    IN    shift, and go to state 55
    VAR   shift, and go to state 22
    TYPE  shift, and go to state 23

    declaration           go to state 56
    type-declaration      go to state 26
    variable-declaration  go to state 27


State 25

   36 declaration-list: declaration .

    $default  reduce using rule 36 (declaration-list)


State 26

   38 declaration: type-declaration .

    $default  reduce using rule 38 (declaration)


State 27

   39 declaration: variable-declaration .

    $default  reduce using rule 39 (declaration)


State 28

    6 exp: MINUS exp .
    7    | exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . DIVIDE exp
   10    | exp . TIMES exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . GT exp
   14    | exp . LT exp
   15    | exp . GE exp
   16    | exp . LE exp
   17    | exp . AND exp
   18    | exp . OR exp
   19    | exp . ASSIGN exp

    $default  reduce using rule 6 (exp)


State 29

    0 $accept: program $end .

    $default  accept


State 30

   19 exp: exp ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp   go to state 57
    lval  go to state 14


State 31

   18 exp: exp OR . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp   go to state 58
    lval  go to state 14


State 32

   17 exp: exp AND . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp   go to state 59
    lval  go to state 14


State 33

   16 exp: exp LE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp   go to state 60
    lval  go to state 14


State 34

   15 exp: exp GE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp   go to state 61
    lval  go to state 14


State 35

   14 exp: exp LT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp   go to state 62
    lval  go to state 14


State 36

   13 exp: exp GT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp   go to state 63
    lval  go to state 14


State 37

   12 exp: exp NEQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp   go to state 64
    lval  go to state 14


State 38

   11 exp: exp EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp   go to state 65
    lval  go to state 14


State 39

    8 exp: exp MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp   go to state 66
    lval  go to state 14


State 40

    7 exp: exp PLUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp   go to state 67
    lval  go to state 14


State 41

    9 exp: exp DIVIDE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp   go to state 68
    lval  go to state 14


State 42

   10 exp: exp TIMES . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp   go to state 69
    lval  go to state 14


State 43

   35 lval: lval LBRACK . exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp   go to state 70
    lval  go to state 14


State 44

   20 exp: lval ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp   go to state 71
    lval  go to state 14


State 45

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . DIVIDE exp
   10    | exp . TIMES exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . GT exp
   14    | exp . LT exp
   15    | exp . GE exp
   16    | exp . LE exp
   17    | exp . AND exp
   18    | exp . OR exp
   19    | exp . ASSIGN exp
   32 exp-list: exp .

    ASSIGN  shift, and go to state 30
    OR      shift, and go to state 31
    AND     shift, and go to state 32
    LE      shift, and go to state 33
    GE      shift, and go to state 34
    LT      shift, and go to state 35
    GT      shift, and go to state 36
    NEQ     shift, and go to state 37
    EQ      shift, and go to state 38
    MINUS   shift, and go to state 39
    PLUS    shift, and go to state 40
    DIVIDE  shift, and go to state 41
    TIMES   shift, and go to state 42

    $default  reduce using rule 32 (exp-list)


State 46

   21 exp: ID LPAREN exp-list . RPAREN
   33 exp-list: exp-list . COMMA exp

    COMMA   shift, and go to state 72
    RPAREN  shift, and go to state 73


State 47

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . DIVIDE exp
   10    | exp . TIMES exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . GT exp
   14    | exp . LT exp
   15    | exp . GE exp
   16    | exp . LE exp
   17    | exp . AND exp
   18    | exp . OR exp
   19    | exp . ASSIGN exp
   23    | ID LBRACK exp . RBRACK OF exp

    RBRACK  shift, and go to state 74
    ASSIGN  shift, and go to state 30
    OR      shift, and go to state 31
    AND     shift, and go to state 32
    LE      shift, and go to state 33
    GE      shift, and go to state 34
    LT      shift, and go to state 35
    GT      shift, and go to state 36
    NEQ     shift, and go to state 37
    EQ      shift, and go to state 38
    MINUS   shift, and go to state 39
    PLUS    shift, and go to state 40
    DIVIDE  shift, and go to state 41
    TIMES   shift, and go to state 42


State 48

   31 exp-seq: exp-seq SEMICOLON . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp   go to state 75
    lval  go to state 14


State 49

   22 exp: LPAREN exp-seq RPAREN .

    $default  reduce using rule 22 (exp)


State 50

   24 exp: IF exp THEN . exp
   25    | IF exp THEN . exp ELSE exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp   go to state 76
    lval  go to state 14


State 51

   26 exp: WHILE exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp   go to state 77
    lval  go to state 14


State 52

   27 exp: FOR ID ASSIGN . exp TO exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp   go to state 78
    lval  go to state 14


State 53

   43 variable-declaration: VAR ID . ASSIGN exp
   44                     | VAR ID . COLON ID ASSIGN exp

    COLON   shift, and go to state 79
    ASSIGN  shift, and go to state 80


State 54

   40 type-declaration: TYPE ID . EQ type

    EQ  shift, and go to state 81


State 55

   29 exp: LET declaration-list IN . exp-seq END

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp      go to state 17
    exp-seq  go to state 82
    lval     go to state 14


State 56

   37 declaration-list: declaration-list declaration .

    $default  reduce using rule 37 (declaration-list)


State 57

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . DIVIDE exp
   10    | exp . TIMES exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . GT exp
   14    | exp . LT exp
   15    | exp . GE exp
   16    | exp . LE exp
   17    | exp . AND exp
   18    | exp . OR exp
   19    | exp . ASSIGN exp
   19    | exp ASSIGN exp .

    OR      shift, and go to state 31
    AND     shift, and go to state 32
    LE      shift, and go to state 33
    GE      shift, and go to state 34
    LT      shift, and go to state 35
    GT      shift, and go to state 36
    NEQ     shift, and go to state 37
    EQ      shift, and go to state 38
    MINUS   shift, and go to state 39
    PLUS    shift, and go to state 40
    DIVIDE  shift, and go to state 41
    TIMES   shift, and go to state 42

    $default  reduce using rule 19 (exp)


State 58

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . DIVIDE exp
   10    | exp . TIMES exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . GT exp
   14    | exp . LT exp
   15    | exp . GE exp
   16    | exp . LE exp
   17    | exp . AND exp
   18    | exp . OR exp
   18    | exp OR exp .
   19    | exp . ASSIGN exp

    LE      shift, and go to state 33
    GE      shift, and go to state 34
    LT      shift, and go to state 35
    GT      shift, and go to state 36
    NEQ     shift, and go to state 37
    EQ      shift, and go to state 38
    MINUS   shift, and go to state 39
    PLUS    shift, and go to state 40
    DIVIDE  shift, and go to state 41
    TIMES   shift, and go to state 42

    $default  reduce using rule 18 (exp)


State 59

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . DIVIDE exp
   10    | exp . TIMES exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . GT exp
   14    | exp . LT exp
   15    | exp . GE exp
   16    | exp . LE exp
   17    | exp . AND exp
   17    | exp AND exp .
   18    | exp . OR exp
   19    | exp . ASSIGN exp

    LE      shift, and go to state 33
    GE      shift, and go to state 34
    LT      shift, and go to state 35
    GT      shift, and go to state 36
    NEQ     shift, and go to state 37
    EQ      shift, and go to state 38
    MINUS   shift, and go to state 39
    PLUS    shift, and go to state 40
    DIVIDE  shift, and go to state 41
    TIMES   shift, and go to state 42

    $default  reduce using rule 17 (exp)


State 60

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . DIVIDE exp
   10    | exp . TIMES exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . GT exp
   14    | exp . LT exp
   15    | exp . GE exp
   16    | exp . LE exp
   16    | exp LE exp .
   17    | exp . AND exp
   18    | exp . OR exp
   19    | exp . ASSIGN exp

    MINUS   shift, and go to state 39
    PLUS    shift, and go to state 40
    DIVIDE  shift, and go to state 41
    TIMES   shift, and go to state 42

    $default  reduce using rule 16 (exp)


State 61

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . DIVIDE exp
   10    | exp . TIMES exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . GT exp
   14    | exp . LT exp
   15    | exp . GE exp
   15    | exp GE exp .
   16    | exp . LE exp
   17    | exp . AND exp
   18    | exp . OR exp
   19    | exp . ASSIGN exp

    MINUS   shift, and go to state 39
    PLUS    shift, and go to state 40
    DIVIDE  shift, and go to state 41
    TIMES   shift, and go to state 42

    $default  reduce using rule 15 (exp)


State 62

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . DIVIDE exp
   10    | exp . TIMES exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . GT exp
   14    | exp . LT exp
   14    | exp LT exp .
   15    | exp . GE exp
   16    | exp . LE exp
   17    | exp . AND exp
   18    | exp . OR exp
   19    | exp . ASSIGN exp

    MINUS   shift, and go to state 39
    PLUS    shift, and go to state 40
    DIVIDE  shift, and go to state 41
    TIMES   shift, and go to state 42

    $default  reduce using rule 14 (exp)


State 63

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . DIVIDE exp
   10    | exp . TIMES exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . GT exp
   13    | exp GT exp .
   14    | exp . LT exp
   15    | exp . GE exp
   16    | exp . LE exp
   17    | exp . AND exp
   18    | exp . OR exp
   19    | exp . ASSIGN exp

    MINUS   shift, and go to state 39
    PLUS    shift, and go to state 40
    DIVIDE  shift, and go to state 41
    TIMES   shift, and go to state 42

    $default  reduce using rule 13 (exp)


State 64

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . DIVIDE exp
   10    | exp . TIMES exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   12    | exp NEQ exp .
   13    | exp . GT exp
   14    | exp . LT exp
   15    | exp . GE exp
   16    | exp . LE exp
   17    | exp . AND exp
   18    | exp . OR exp
   19    | exp . ASSIGN exp

    MINUS   shift, and go to state 39
    PLUS    shift, and go to state 40
    DIVIDE  shift, and go to state 41
    TIMES   shift, and go to state 42

    $default  reduce using rule 12 (exp)


State 65

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . DIVIDE exp
   10    | exp . TIMES exp
   11    | exp . EQ exp
   11    | exp EQ exp .
   12    | exp . NEQ exp
   13    | exp . GT exp
   14    | exp . LT exp
   15    | exp . GE exp
   16    | exp . LE exp
   17    | exp . AND exp
   18    | exp . OR exp
   19    | exp . ASSIGN exp

    MINUS   shift, and go to state 39
    PLUS    shift, and go to state 40
    DIVIDE  shift, and go to state 41
    TIMES   shift, and go to state 42

    $default  reduce using rule 11 (exp)


State 66

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    8    | exp MINUS exp .
    9    | exp . DIVIDE exp
   10    | exp . TIMES exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . GT exp
   14    | exp . LT exp
   15    | exp . GE exp
   16    | exp . LE exp
   17    | exp . AND exp
   18    | exp . OR exp
   19    | exp . ASSIGN exp

    DIVIDE  shift, and go to state 41
    TIMES   shift, and go to state 42

    $default  reduce using rule 8 (exp)


State 67

    7 exp: exp . PLUS exp
    7    | exp PLUS exp .
    8    | exp . MINUS exp
    9    | exp . DIVIDE exp
   10    | exp . TIMES exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . GT exp
   14    | exp . LT exp
   15    | exp . GE exp
   16    | exp . LE exp
   17    | exp . AND exp
   18    | exp . OR exp
   19    | exp . ASSIGN exp

    DIVIDE  shift, and go to state 41
    TIMES   shift, and go to state 42

    $default  reduce using rule 7 (exp)


State 68

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . DIVIDE exp
    9    | exp DIVIDE exp .
   10    | exp . TIMES exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . GT exp
   14    | exp . LT exp
   15    | exp . GE exp
   16    | exp . LE exp
   17    | exp . AND exp
   18    | exp . OR exp
   19    | exp . ASSIGN exp

    $default  reduce using rule 9 (exp)


State 69

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . DIVIDE exp
   10    | exp . TIMES exp
   10    | exp TIMES exp .
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . GT exp
   14    | exp . LT exp
   15    | exp . GE exp
   16    | exp . LE exp
   17    | exp . AND exp
   18    | exp . OR exp
   19    | exp . ASSIGN exp

    $default  reduce using rule 10 (exp)


State 70

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . DIVIDE exp
   10    | exp . TIMES exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . GT exp
   14    | exp . LT exp
   15    | exp . GE exp
   16    | exp . LE exp
   17    | exp . AND exp
   18    | exp . OR exp
   19    | exp . ASSIGN exp
   35 lval: lval LBRACK exp . RBRACK

    RBRACK  shift, and go to state 83
    ASSIGN  shift, and go to state 30
    OR      shift, and go to state 31
    AND     shift, and go to state 32
    LE      shift, and go to state 33
    GE      shift, and go to state 34
    LT      shift, and go to state 35
    GT      shift, and go to state 36
    NEQ     shift, and go to state 37
    EQ      shift, and go to state 38
    MINUS   shift, and go to state 39
    PLUS    shift, and go to state 40
    DIVIDE  shift, and go to state 41
    TIMES   shift, and go to state 42


State 71

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . DIVIDE exp
   10    | exp . TIMES exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . GT exp
   14    | exp . LT exp
   15    | exp . GE exp
   16    | exp . LE exp
   17    | exp . AND exp
   18    | exp . OR exp
   19    | exp . ASSIGN exp
   20    | lval ASSIGN exp .

    OR      shift, and go to state 31
    AND     shift, and go to state 32
    LE      shift, and go to state 33
    GE      shift, and go to state 34
    LT      shift, and go to state 35
    GT      shift, and go to state 36
    NEQ     shift, and go to state 37
    EQ      shift, and go to state 38
    MINUS   shift, and go to state 39
    PLUS    shift, and go to state 40
    DIVIDE  shift, and go to state 41
    TIMES   shift, and go to state 42

    $default  reduce using rule 20 (exp)


State 72

   33 exp-list: exp-list COMMA . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp   go to state 84
    lval  go to state 14


State 73

   21 exp: ID LPAREN exp-list RPAREN .

    $default  reduce using rule 21 (exp)


State 74

   23 exp: ID LBRACK exp RBRACK . OF exp

    OF  shift, and go to state 85


State 75

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . DIVIDE exp
   10    | exp . TIMES exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . GT exp
   14    | exp . LT exp
   15    | exp . GE exp
   16    | exp . LE exp
   17    | exp . AND exp
   18    | exp . OR exp
   19    | exp . ASSIGN exp
   31 exp-seq: exp-seq SEMICOLON exp .

    ASSIGN  shift, and go to state 30
    OR      shift, and go to state 31
    AND     shift, and go to state 32
    LE      shift, and go to state 33
    GE      shift, and go to state 34
    LT      shift, and go to state 35
    GT      shift, and go to state 36
    NEQ     shift, and go to state 37
    EQ      shift, and go to state 38
    MINUS   shift, and go to state 39
    PLUS    shift, and go to state 40
    DIVIDE  shift, and go to state 41
    TIMES   shift, and go to state 42

    $default  reduce using rule 31 (exp-seq)


State 76

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . DIVIDE exp
   10    | exp . TIMES exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . GT exp
   14    | exp . LT exp
   15    | exp . GE exp
   16    | exp . LE exp
   17    | exp . AND exp
   18    | exp . OR exp
   19    | exp . ASSIGN exp
   24    | IF exp THEN exp .
   25    | IF exp THEN exp . ELSE exp

    ELSE    shift, and go to state 86
    ASSIGN  shift, and go to state 30
    OR      shift, and go to state 31
    AND     shift, and go to state 32
    LE      shift, and go to state 33
    GE      shift, and go to state 34
    LT      shift, and go to state 35
    GT      shift, and go to state 36
    NEQ     shift, and go to state 37
    EQ      shift, and go to state 38
    MINUS   shift, and go to state 39
    PLUS    shift, and go to state 40
    DIVIDE  shift, and go to state 41
    TIMES   shift, and go to state 42

    ELSE      [reduce using rule 24 (exp)]
    ASSIGN    [reduce using rule 24 (exp)]
    OR        [reduce using rule 24 (exp)]
    AND       [reduce using rule 24 (exp)]
    LE        [reduce using rule 24 (exp)]
    GE        [reduce using rule 24 (exp)]
    LT        [reduce using rule 24 (exp)]
    GT        [reduce using rule 24 (exp)]
    NEQ       [reduce using rule 24 (exp)]
    EQ        [reduce using rule 24 (exp)]
    MINUS     [reduce using rule 24 (exp)]
    PLUS      [reduce using rule 24 (exp)]
    DIVIDE    [reduce using rule 24 (exp)]
    TIMES     [reduce using rule 24 (exp)]
    $default  reduce using rule 24 (exp)


State 77

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . DIVIDE exp
   10    | exp . TIMES exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . GT exp
   14    | exp . LT exp
   15    | exp . GE exp
   16    | exp . LE exp
   17    | exp . AND exp
   18    | exp . OR exp
   19    | exp . ASSIGN exp
   26    | WHILE exp DO exp .

    ASSIGN  shift, and go to state 30
    OR      shift, and go to state 31
    AND     shift, and go to state 32
    LE      shift, and go to state 33
    GE      shift, and go to state 34
    LT      shift, and go to state 35
    GT      shift, and go to state 36
    NEQ     shift, and go to state 37
    EQ      shift, and go to state 38
    MINUS   shift, and go to state 39
    PLUS    shift, and go to state 40
    DIVIDE  shift, and go to state 41
    TIMES   shift, and go to state 42

    ASSIGN    [reduce using rule 26 (exp)]
    OR        [reduce using rule 26 (exp)]
    AND       [reduce using rule 26 (exp)]
    LE        [reduce using rule 26 (exp)]
    GE        [reduce using rule 26 (exp)]
    LT        [reduce using rule 26 (exp)]
    GT        [reduce using rule 26 (exp)]
    NEQ       [reduce using rule 26 (exp)]
    EQ        [reduce using rule 26 (exp)]
    MINUS     [reduce using rule 26 (exp)]
    PLUS      [reduce using rule 26 (exp)]
    DIVIDE    [reduce using rule 26 (exp)]
    TIMES     [reduce using rule 26 (exp)]
    $default  reduce using rule 26 (exp)


State 78

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . DIVIDE exp
   10    | exp . TIMES exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . GT exp
   14    | exp . LT exp
   15    | exp . GE exp
   16    | exp . LE exp
   17    | exp . AND exp
   18    | exp . OR exp
   19    | exp . ASSIGN exp
   27    | FOR ID ASSIGN exp . TO exp DO exp

    TO      shift, and go to state 87
    ASSIGN  shift, and go to state 30
    OR      shift, and go to state 31
    AND     shift, and go to state 32
    LE      shift, and go to state 33
    GE      shift, and go to state 34
    LT      shift, and go to state 35
    GT      shift, and go to state 36
    NEQ     shift, and go to state 37
    EQ      shift, and go to state 38
    MINUS   shift, and go to state 39
    PLUS    shift, and go to state 40
    DIVIDE  shift, and go to state 41
    TIMES   shift, and go to state 42


State 79

   44 variable-declaration: VAR ID COLON . ID ASSIGN exp

    ID  shift, and go to state 88


State 80

   43 variable-declaration: VAR ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp   go to state 89
    lval  go to state 14


State 81

   40 type-declaration: TYPE ID EQ . type

    ID     shift, and go to state 90
    ARRAY  shift, and go to state 91

    type  go to state 92


State 82

   29 exp: LET declaration-list IN exp-seq . END
   31 exp-seq: exp-seq . SEMICOLON exp

    SEMICOLON  shift, and go to state 48
    END        shift, and go to state 93


State 83

   35 lval: lval LBRACK exp RBRACK .

    $default  reduce using rule 35 (lval)


State 84

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . DIVIDE exp
   10    | exp . TIMES exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . GT exp
   14    | exp . LT exp
   15    | exp . GE exp
   16    | exp . LE exp
   17    | exp . AND exp
   18    | exp . OR exp
   19    | exp . ASSIGN exp
   33 exp-list: exp-list COMMA exp .

    ASSIGN  shift, and go to state 30
    OR      shift, and go to state 31
    AND     shift, and go to state 32
    LE      shift, and go to state 33
    GE      shift, and go to state 34
    LT      shift, and go to state 35
    GT      shift, and go to state 36
    NEQ     shift, and go to state 37
    EQ      shift, and go to state 38
    MINUS   shift, and go to state 39
    PLUS    shift, and go to state 40
    DIVIDE  shift, and go to state 41
    TIMES   shift, and go to state 42

    $default  reduce using rule 33 (exp-list)


State 85

   23 exp: ID LBRACK exp RBRACK OF . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp   go to state 94
    lval  go to state 14


State 86

   25 exp: IF exp THEN exp ELSE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp   go to state 95
    lval  go to state 14


State 87

   27 exp: FOR ID ASSIGN exp TO . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp   go to state 96
    lval  go to state 14


State 88

   44 variable-declaration: VAR ID COLON ID . ASSIGN exp

    ASSIGN  shift, and go to state 97


State 89

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . DIVIDE exp
   10    | exp . TIMES exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . GT exp
   14    | exp . LT exp
   15    | exp . GE exp
   16    | exp . LE exp
   17    | exp . AND exp
   18    | exp . OR exp
   19    | exp . ASSIGN exp
   43 variable-declaration: VAR ID ASSIGN exp .

    ASSIGN  shift, and go to state 30
    OR      shift, and go to state 31
    AND     shift, and go to state 32
    LE      shift, and go to state 33
    GE      shift, and go to state 34
    LT      shift, and go to state 35
    GT      shift, and go to state 36
    NEQ     shift, and go to state 37
    EQ      shift, and go to state 38
    MINUS   shift, and go to state 39
    PLUS    shift, and go to state 40
    DIVIDE  shift, and go to state 41
    TIMES   shift, and go to state 42

    $default  reduce using rule 43 (variable-declaration)


State 90

   41 type: ID .

    $default  reduce using rule 41 (type)


State 91

   42 type: ARRAY . OF ID

    OF  shift, and go to state 98


State 92

   40 type-declaration: TYPE ID EQ type .

    $default  reduce using rule 40 (type-declaration)


State 93

   29 exp: LET declaration-list IN exp-seq END .

    $default  reduce using rule 29 (exp)


State 94

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . DIVIDE exp
   10    | exp . TIMES exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . GT exp
   14    | exp . LT exp
   15    | exp . GE exp
   16    | exp . LE exp
   17    | exp . AND exp
   18    | exp . OR exp
   19    | exp . ASSIGN exp
   23    | ID LBRACK exp RBRACK OF exp .

    ASSIGN  shift, and go to state 30
    OR      shift, and go to state 31
    AND     shift, and go to state 32
    LE      shift, and go to state 33
    GE      shift, and go to state 34
    LT      shift, and go to state 35
    GT      shift, and go to state 36
    NEQ     shift, and go to state 37
    EQ      shift, and go to state 38
    MINUS   shift, and go to state 39
    PLUS    shift, and go to state 40
    DIVIDE  shift, and go to state 41
    TIMES   shift, and go to state 42

    ASSIGN    [reduce using rule 23 (exp)]
    OR        [reduce using rule 23 (exp)]
    AND       [reduce using rule 23 (exp)]
    LE        [reduce using rule 23 (exp)]
    GE        [reduce using rule 23 (exp)]
    LT        [reduce using rule 23 (exp)]
    GT        [reduce using rule 23 (exp)]
    NEQ       [reduce using rule 23 (exp)]
    EQ        [reduce using rule 23 (exp)]
    MINUS     [reduce using rule 23 (exp)]
    PLUS      [reduce using rule 23 (exp)]
    DIVIDE    [reduce using rule 23 (exp)]
    TIMES     [reduce using rule 23 (exp)]
    $default  reduce using rule 23 (exp)


State 95

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . DIVIDE exp
   10    | exp . TIMES exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . GT exp
   14    | exp . LT exp
   15    | exp . GE exp
   16    | exp . LE exp
   17    | exp . AND exp
   18    | exp . OR exp
   19    | exp . ASSIGN exp
   25    | IF exp THEN exp ELSE exp .

    ASSIGN  shift, and go to state 30
    OR      shift, and go to state 31
    AND     shift, and go to state 32
    LE      shift, and go to state 33
    GE      shift, and go to state 34
    LT      shift, and go to state 35
    GT      shift, and go to state 36
    NEQ     shift, and go to state 37
    EQ      shift, and go to state 38
    MINUS   shift, and go to state 39
    PLUS    shift, and go to state 40
    DIVIDE  shift, and go to state 41
    TIMES   shift, and go to state 42

    ASSIGN    [reduce using rule 25 (exp)]
    OR        [reduce using rule 25 (exp)]
    AND       [reduce using rule 25 (exp)]
    LE        [reduce using rule 25 (exp)]
    GE        [reduce using rule 25 (exp)]
    LT        [reduce using rule 25 (exp)]
    GT        [reduce using rule 25 (exp)]
    NEQ       [reduce using rule 25 (exp)]
    EQ        [reduce using rule 25 (exp)]
    MINUS     [reduce using rule 25 (exp)]
    PLUS      [reduce using rule 25 (exp)]
    DIVIDE    [reduce using rule 25 (exp)]
    TIMES     [reduce using rule 25 (exp)]
    $default  reduce using rule 25 (exp)


State 96

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . DIVIDE exp
   10    | exp . TIMES exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . GT exp
   14    | exp . LT exp
   15    | exp . GE exp
   16    | exp . LE exp
   17    | exp . AND exp
   18    | exp . OR exp
   19    | exp . ASSIGN exp
   27    | FOR ID ASSIGN exp TO exp . DO exp

    DO      shift, and go to state 99
    ASSIGN  shift, and go to state 30
    OR      shift, and go to state 31
    AND     shift, and go to state 32
    LE      shift, and go to state 33
    GE      shift, and go to state 34
    LT      shift, and go to state 35
    GT      shift, and go to state 36
    NEQ     shift, and go to state 37
    EQ      shift, and go to state 38
    MINUS   shift, and go to state 39
    PLUS    shift, and go to state 40
    DIVIDE  shift, and go to state 41
    TIMES   shift, and go to state 42


State 97

   44 variable-declaration: VAR ID COLON ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp   go to state 100
    lval  go to state 14


State 98

   42 type: ARRAY OF . ID

    ID  shift, and go to state 101


State 99

   27 exp: FOR ID ASSIGN exp TO exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp   go to state 102
    lval  go to state 14


State 100

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . DIVIDE exp
   10    | exp . TIMES exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . GT exp
   14    | exp . LT exp
   15    | exp . GE exp
   16    | exp . LE exp
   17    | exp . AND exp
   18    | exp . OR exp
   19    | exp . ASSIGN exp
   44 variable-declaration: VAR ID COLON ID ASSIGN exp .

    ASSIGN  shift, and go to state 30
    OR      shift, and go to state 31
    AND     shift, and go to state 32
    LE      shift, and go to state 33
    GE      shift, and go to state 34
    LT      shift, and go to state 35
    GT      shift, and go to state 36
    NEQ     shift, and go to state 37
    EQ      shift, and go to state 38
    MINUS   shift, and go to state 39
    PLUS    shift, and go to state 40
    DIVIDE  shift, and go to state 41
    TIMES   shift, and go to state 42

    $default  reduce using rule 44 (variable-declaration)


State 101

   42 type: ARRAY OF ID .

    $default  reduce using rule 42 (type)


State 102

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . DIVIDE exp
   10    | exp . TIMES exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . GT exp
   14    | exp . LT exp
   15    | exp . GE exp
   16    | exp . LE exp
   17    | exp . AND exp
   18    | exp . OR exp
   19    | exp . ASSIGN exp
   27    | FOR ID ASSIGN exp TO exp DO exp .

    ASSIGN  shift, and go to state 30
    OR      shift, and go to state 31
    AND     shift, and go to state 32
    LE      shift, and go to state 33
    GE      shift, and go to state 34
    LT      shift, and go to state 35
    GT      shift, and go to state 36
    NEQ     shift, and go to state 37
    EQ      shift, and go to state 38
    MINUS   shift, and go to state 39
    PLUS    shift, and go to state 40
    DIVIDE  shift, and go to state 41
    TIMES   shift, and go to state 42

    ASSIGN    [reduce using rule 27 (exp)]
    OR        [reduce using rule 27 (exp)]
    AND       [reduce using rule 27 (exp)]
    LE        [reduce using rule 27 (exp)]
    GE        [reduce using rule 27 (exp)]
    LT        [reduce using rule 27 (exp)]
    GT        [reduce using rule 27 (exp)]
    NEQ       [reduce using rule 27 (exp)]
    EQ        [reduce using rule 27 (exp)]
    MINUS     [reduce using rule 27 (exp)]
    PLUS      [reduce using rule 27 (exp)]
    DIVIDE    [reduce using rule 27 (exp)]
    TIMES     [reduce using rule 27 (exp)]
    $default  reduce using rule 27 (exp)
